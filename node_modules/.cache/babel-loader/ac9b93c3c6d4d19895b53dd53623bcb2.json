{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport socketIOClient from 'socket.io-client';\n\nvar util = require('../../util/util'); //Necessary to use this function to allow the useStyles hook to work\n\n\nvar DenseTableWithStyles = function DenseTableWithStyles(_ref) {\n  var rows = _ref.rows;\n  var useStyles = makeStyles(function (theme) {\n    return {\n      root: {\n        width: '70%'\n      },\n      paper: {\n        marginTop: theme.spacing(3),\n        width: '70%',\n        overflowX: 'auto',\n        marginBottom: theme.spacing(2)\n      },\n      table: {\n        minWidth: 650\n      }\n    };\n  }); //only works inside a functional component\n\n  var classes = useStyles(); //i do not now why this step is necessary. the arrays before and after seem to be identical but apparently they are not\n  // i had to do the same in api/machines\n\n  var machines = util.machine_results_to_array(rows);\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(Paper, {\n    className: classes.paper\n  }, React.createElement(Table, {\n    className: classes.table,\n    size: \"small\"\n  }, React.createElement(TableHead, null, React.createElement(TableRow, null, React.createElement(TableCell, null, \"Name\"), React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Temperature F\"), React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Pressure\"))), React.createElement(TableBody, null, machines.map(function (row) {\n    return React.createElement(TableRow, {\n      key: row.name\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\"\n    }, row.name), React.createElement(TableCell, {\n      align: \"right\"\n    }, row.temp), React.createElement(TableCell, {\n      align: \"right\"\n    }, row.pressure));\n  })))));\n};\n\nvar DenseTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DenseTable, _React$Component);\n\n  function DenseTable(props) {\n    var _this;\n\n    _classCallCheck(this, DenseTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DenseTable).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _this.state = {\n      rows: \"\",\n      endpoint: \"http://localhost:4000\"\n    };\n    return _this;\n  }\n\n  _createClass(DenseTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //_isMounted checks if the component is mounted before calling api to prevent memory leak\n      this._isMounted = true;\n      var endpoint = this.state.endpoint;\n      var socket = socketIOClient(endpoint);\n      socket.on(\"FromAPI\",\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(data) {\n          var json;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!_this2._isMounted) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return JSON.parse(data);\n\n                case 3:\n                  json = _context.sent;\n                  console.log(\"json\");\n                  console.log(json);\n\n                  _this2.setState({\n                    rows: json\n                  });\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = this.state.rows;\n      console.log(\"rows\");\n      console.log(rows);\n      /*return (\n        <h1>Machine list {rows  ?  <p><DenseTableWithStyles rows={rows}/></p> : <p>Loading...</p>} </h1>\n      );*/\n\n      return React.createElement(\"h1\", null, \"JSON \", rows);\n    }\n  }]);\n\n  return DenseTable;\n}(React.Component);\n\nexport { DenseTable as default };","map":{"version":3,"sources":["/home/bbnewey/node-workspace/next-mysql/components/Machine/DenseTable.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","socketIOClient","util","require","DenseTableWithStyles","rows","useStyles","theme","root","width","paper","marginTop","spacing","overflowX","marginBottom","table","minWidth","classes","machines","machine_results_to_array","map","row","name","temp","pressure","DenseTable","props","state","endpoint","_isMounted","socket","on","data","JSON","parse","json","console","log","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport socketIOClient from 'socket.io-client'\nconst util = require('../../util/util')\n\n//Necessary to use this function to allow the useStyles hook to work\nconst DenseTableWithStyles = ({rows}) => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      width: '70%',\n    },\n    paper: {\n      marginTop: theme.spacing(3),\n      width: '70%',\n      overflowX: 'auto',\n      marginBottom: theme.spacing(2),\n    },\n    table: {\n      minWidth: 650,\n    },\n  }));\n\n  //only works inside a functional component\n  const classes = useStyles();\n\n  //i do not now why this step is necessary. the arrays before and after seem to be identical but apparently they are not\n  // i had to do the same in api/machines\n  const machines = util.machine_results_to_array(rows);\n\n  return (\n    <div className={classes.root}>\n            <Paper className={classes.paper}>\n              <Table className={classes.table} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell align=\"right\">Temperature F</TableCell>\n                    <TableCell align=\"right\">Pressure</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                {machines.map(row => (\n                  <TableRow key={row.name}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.temp}</TableCell>\n                  <TableCell align=\"right\">{row.pressure}</TableCell>\n                </TableRow>\n                ))}\n                </TableBody>\n              </Table>\n            </Paper>\n          </div>\n  )\n}\n\nexport default class DenseTable extends React.Component {\n    \n    _isMounted = false;\n\n    constructor(props){\n        super(props);\n        this.state = {\n          rows: \"\",\n          endpoint: \"http://localhost:4000\"\n        };\n        \n    }\n\n    componentDidMount(){\n      //_isMounted checks if the component is mounted before calling api to prevent memory leak\n        this._isMounted = true;\n        const { endpoint } = this.state;\n        const socket = socketIOClient(endpoint);\n        socket.on(\"FromAPI\", async data => {\n            if(this._isMounted) {\n              var json = await JSON.parse(data);\n              console.log(\"json\");\n              console.log(json);\n              this.setState({ rows: json });\n            }\n        }); \n    }\n\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    render() {\n      const  rows   = this.state.rows;\n      console.log(\"rows\");\n      console.log(rows);\n      /*return (\n        <h1>Machine list {rows  ?  <p><DenseTableWithStyles rows={rows}/></p> : <p>Loading...</p>} </h1>\n      );*/\n      return (\n        <h1>JSON {rows}</h1>\n      );\n    }\n}"]},"metadata":{},"sourceType":"module"}