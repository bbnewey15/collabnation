{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport 'isomorphic-unfetch';\nimport Layout from '../components/Layouts/Main';\nimport DenseTable from '../components/Machine/DenseTable';\n\nvar MachineData =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MachineData, _React$Component);\n\n  function MachineData() {\n    _classCallCheck(this, MachineData);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MachineData).apply(this, arguments));\n  }\n\n  _createClass(MachineData, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, null, React.createElement(DenseTable, null));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MachineData;\n}(React.Component);\n\nexport { MachineData as default };","map":null,"metadata":{},"sourceType":"module"}