{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport MainLayout from '../components/Layouts/Main';\nimport Link from 'next/link';\nimport Profiles from './profiles';\nimport Machines from '../components/Machine/Ui';\nimport socketIOClient from 'socket.io-client';\n\nvar PostLink = function PostLink(props) {\n  return React.createElement(\"li\", null, React.createElement(Link, {\n    href: \"\".concat(props.id)\n  }, React.createElement(\"a\", null, props.title)));\n};\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  //disperse data to specific machines here\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _this.state = {\n      rows: \"\",\n      endpoint: \"http://localhost:4000\"\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //_isMounted checks if the component is mounted before calling api to prevent memory leak\n      this._isMounted = true;\n      var endpoint = this.state.endpoint;\n      var socket = socketIOClient(endpoint);\n      socket.on(\"FromC\",\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(data) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (_this2._isMounted) {\n                    _this2.setState({\n                      rows: data\n                    });\n                  }\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = this.state.rows;\n      console.log(rows);\n      console.log(typeof rows);\n      return React.createElement(MainLayout, null, React.createElement(\"h1\", null, \"Nitrogen Machine \", rows, \" \"), React.createElement(\"ul\", null, React.createElement(PostLink, {\n        id: \"machineData\",\n        title: \"List of Machines\"\n      }), React.createElement(PostLink, {\n        id: \"profiles\",\n        title: \"List of Profiles\"\n      })), React.createElement(Machines, null));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport { Index as default };","map":{"version":3,"sources":["/home/bbnewey/node-workspace/next-mysql/pages/index.js"],"names":["React","MainLayout","Link","Profiles","Machines","socketIOClient","PostLink","props","id","title","Index","state","rows","endpoint","_isMounted","socket","on","data","setState","console","log","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAClB,gCACI,oBAAC,IAAD;AAAM,IAAA,IAAI,YAAKA,KAAK,CAACC,EAAX;AAAV,KACI,+BAAID,KAAK,CAACE,KAAV,CADJ,CADJ,CADkB;AAAA,CAAtB;;IAWqBC,K;;;;;AAIjB;AACA,iBAAYH,KAAZ,EAAkB;AAAA;;AAAA;;AACd,+EAAMA,KAAN;;AADc,iEAHL,KAGK;;AAEd,UAAKI,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFc;AAOjB;;;;wCAEkB;AAAA;;AACf;AACA,WAAKC,UAAL,GAAkB,IAAlB;AAFe,UAGPD,QAHO,GAGM,KAAKF,KAHX,CAGPE,QAHO;AAIf,UAAME,MAAM,GAAGV,cAAc,CAACQ,QAAD,CAA7B;AACAE,MAAAA,MAAM,CAACC,EAAP,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAmB,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AACf,sBAAG,MAAI,CAACH,UAAR,EAAoB;AAChB,oBAAA,MAAI,CAACI,QAAL,CAAc;AAAEN,sBAAAA,IAAI,EAAEK;AAAR,qBAAd;AACH;;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAnB;;AAAA;AAAA;AAAA;AAAA;AAKH;;;2CACqB;AAClB,WAAKH,UAAL,GAAkB,KAAlB;AACH;;;6BAEQ;AAEL,UAAOF,IAAI,GAAK,KAAKD,KAAL,CAAWC,IAA3B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOR,IAAnB;AACA,aACI,oBAAC,UAAD,QACI,qDAAsBA,IAAtB,MADJ,EAEI,gCACI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,aAAb;AAA2B,QAAA,KAAK,EAAC;AAAjC,QADJ,EAEI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,UAAb;AAAwB,QAAA,KAAK,EAAC;AAA9B,QAFJ,CAFJ,EAOI,oBAAC,QAAD,OAPJ,CADJ;AAYH;;;;EA9C8BZ,KAAK,CAACqB,S;;SAApBX,K","sourcesContent":["import React from 'react'\n\nimport MainLayout from '../components/Layouts/Main';\nimport Link from 'next/link';\nimport Profiles from './profiles';\n\nimport Machines from '../components/Machine/Ui'\n\nimport socketIOClient from 'socket.io-client'\n\nconst PostLink = props => (\n    <li>\n        <Link href={`${props.id}`}>\n            <a>{props.title}</a>\n        </Link>\n    </li>\n);\n\n\n\n\nexport default class Index extends React.Component {\n\n    _isMounted = false;\n\n    //disperse data to specific machines here\n    constructor(props){\n        super(props);\n        this.state = {\n          rows: \"\",\n          endpoint: \"http://localhost:4000\"\n        };\n        \n    }\n\n    componentDidMount(){\n        //_isMounted checks if the component is mounted before calling api to prevent memory leak\n        this._isMounted = true;\n        const { endpoint } = this.state;\n        const socket = socketIOClient(endpoint);\n        socket.on(\"FromC\", async data => {\n            if(this._isMounted) {\n                this.setState({ rows: data });\n            }\n        }); \n    }\n    componentWillUnmount(){\n        this._isMounted = false;\n    }\n\n    render() {\n\n        const  rows   = this.state.rows;        \n        console.log(rows);\n        console.log(typeof(rows));\n        return (\n            <MainLayout>\n                <h1>Nitrogen Machine {rows} </h1>\n                <ul>\n                    <PostLink id=\"machineData\" title=\"List of Machines\"/>\n                    <PostLink id=\"profiles\" title=\"List of Profiles\"/>\n                </ul>\n                \n                <Machines />\n\n            </MainLayout>\n        );\n    }\n\n \n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}