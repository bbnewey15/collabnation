{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport socketIOClient from 'socket.io-client';\n\nvar util = require('../../util/util'); //Necessary to use this function to allow the useStyles hook to work\n\n\nvar DenseTableWithStyles = function DenseTableWithStyles(_ref) {\n  var rows = _ref.rows;\n  var useStyles = makeStyles(function (theme) {\n    return {\n      root: {\n        width: '70%'\n      },\n      paper: {\n        marginTop: theme.spacing(3),\n        width: '70%',\n        overflowX: 'auto',\n        marginBottom: theme.spacing(2)\n      },\n      table: {\n        minWidth: 650\n      }\n    };\n  }); //only works inside a functional component\n\n  var classes = useStyles();\n  var machines = rows;\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(Paper, {\n    className: classes.paper\n  }, React.createElement(Table, {\n    className: classes.table,\n    size: \"small\"\n  }, React.createElement(TableHead, null, React.createElement(TableRow, null, React.createElement(TableCell, null, \"Name\"), React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Temperature F\"), React.createElement(TableCell, {\n    align: \"right\"\n  }, \"Pressure\"))), React.createElement(TableBody, null, machines.map(function (row) {\n    return React.createElement(TableRow, {\n      key: row.name\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\"\n    }, row.name), React.createElement(TableCell, {\n      align: \"right\"\n    }, row.temp), React.createElement(TableCell, {\n      align: \"right\"\n    }, row.pressure));\n  })))));\n};\n\nvar DenseTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DenseTable, _React$Component);\n\n  function DenseTable(props) {\n    var _this;\n\n    _classCallCheck(this, DenseTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DenseTable).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _this.state = {\n      rows: \"\",\n      endpoint: \"http://localhost:4000\"\n    };\n    return _this;\n  }\n\n  _createClass(DenseTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //_isMounted checks if the component is mounted before calling api to prevent memory leak\n      this._isMounted = true;\n      var endpoint = this.state.endpoint;\n      var socket = socketIOClient(endpoint);\n      socket.on(\"FromC\",\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(data) {\n          var json;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!_this2._isMounted) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return JSON.parse(data);\n\n                case 3:\n                  json = _context.sent;\n\n                  _this2.setState({\n                    rows: json.machines\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = this.state.rows;\n      return React.createElement(\"h1\", null, \"Machine list \", rows ? React.createElement(\"div\", null, React.createElement(DenseTableWithStyles, {\n        rows: rows\n      })) : React.createElement(\"p\", null, React.createElement(CircularProgress, null)), \" \");\n    }\n  }]);\n\n  return DenseTable;\n}(React.Component);\n\nexport { DenseTable as default };","map":null,"metadata":{},"sourceType":"module"}